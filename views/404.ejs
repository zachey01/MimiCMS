<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>404</title>

    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css"
    />
    <link rel="preconnect" href="https://fonts.gstatic.com" />
    <link
      href="https://fonts.googleapis.com/css2?family=Rajdhani:wght@500&family=Staatliches&display=swap"
      rel="stylesheet"
    />
    <style>
      html,
      body {
        background: white;
        height: 100%;
        text-transform: uppercase;
      }
      .container {
        height: 100%;
        width: 100%;
        justify-content: center;
        align-items: center;
        display: inline-flex;
      }
      .text {
        font-weight: 100;
        font-size: 130px;
        color: black;
      }
      .dud {
        color: black;
      }
    </style>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/prefixfree/1.0.7/prefixfree.min.js"></script>
  </head>

  <body>
    <div class="container">
      <div class="text"></div>
    </div>

    <script>
      "use strict";

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      // ——————————————————————————————————————————————————
      // TextScramble
      // ——————————————————————————————————————————————————

      var TextScramble = (function () {
        function TextScramble(el) {
          _classCallCheck(this, TextScramble);

          this.el = el;
          this.chars = "!<>-_\\/[]{}—=+*^?#________";
          this.update = this.update.bind(this);
        }

        TextScramble.prototype.setText = function setText(newText) {
          var _this = this;

          var oldText = this.el.innerText;
          var length = Math.max(oldText.length, newText.length);
          var promise = new Promise(function (resolve) {
            return (_this.resolve = resolve);
          });
          this.queue = [];
          for (var i = 0; i < length; i++) {
            var from = oldText[i] || "";
            var to = newText[i] || "";
            var start = Math.floor(Math.random() * 40);
            var end = start + Math.floor(Math.random() * 40);
            this.queue.push({ from: from, to: to, start: start, end: end });
          }
          cancelAnimationFrame(this.frameRequest);
          this.frame = 0;
          this.update();
          return promise;
        };

        TextScramble.prototype.update = function update() {
          var output = "";
          var complete = 0;
          for (var i = 0, n = this.queue.length; i < n; i++) {
            var _queue$i = this.queue[i];
            var from = _queue$i.from;
            var to = _queue$i.to;
            var start = _queue$i.start;
            var end = _queue$i.end;
            var char = _queue$i.char;

            if (this.frame >= end) {
              complete++;
              output += to;
            } else if (this.frame >= start) {
              if (!char || Math.random() < 0.28) {
                char = this.randomChar();
                this.queue[i].char = char;
              }
              output += '<span class="dud">' + char + "</span>";
            } else {
              output += from;
            }
          }
          this.el.innerHTML = output;
          if (complete === this.queue.length) {
            this.resolve();
          } else {
            this.frameRequest = requestAnimationFrame(this.update);
            this.frame++;
          }
        };

        TextScramble.prototype.randomChar = function randomChar() {
          return this.chars[Math.floor(Math.random() * this.chars.length)];
        };

        return TextScramble;
      })();

      // ——————————————————————————————————————————————————
      // Example
      // ——————————————————————————————————————————————————

      var phrases = [
        "Не Найдено",
        "404",
        "40",
        "4",
        "Не Найдено",
        "4",
        "40",
        "404",
      ];

      var el = document.querySelector(".text");
      var fx = new TextScramble(el);

      var counter = 0;
      var next = function next() {
        fx.setText(phrases[counter]).then(function () {
          setTimeout(next, 800);
        });
        counter = (counter + 1) % phrases.length;
      };

      next();
    </script>
  </body>
</html>
